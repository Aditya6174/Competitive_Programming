class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        deque<int> dq;
        vector<int> ans;
        for(int i=0;i<nums.size();i++){
		//remove out of bound index i.e out of window in queue

		if(!dq.empty() && dq.front()==i-k)
			dq.pop_front();

		//remove all smaller elements from back    
		while(!dq.empty() && nums[dq.back()]<=nums[i])
			dq.pop_back();

		//push the index of new in deque
		dq.push_back(i);

		// for i greater than k-1 put front index of deque in answer as it is arranged in     decreasing order
		if(i>=k-1)  
			ans.push_back(nums[dq.front()]);
	}
	return ans;
    }
};
