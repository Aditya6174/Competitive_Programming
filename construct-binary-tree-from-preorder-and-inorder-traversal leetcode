class Solution {
public:
    TreeNode* solve(vector<int> preorder,vector<int> inorder,int n,int st,int end,int &index){
        if(index >= n || st > end)
        return NULL;
        int ele = preorder[index++];
        TreeNode* root = new TreeNode(ele);
        int position  = -1;
        for(int i=0;i<n;i++){
            if(inorder[i] == ele){
                position = i;
                break;
            }
        }
        root->left = solve(preorder,inorder,n,st,position-1,index);
        root->right = solve(preorder,inorder,n,position+1,end,index);
        return root;
    }
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        int index = 0;
        int n = preorder.size();
        TreeNode* ans = solve(preorder,inorder,n,0,n-1,index);
        return ans;
    }
};
