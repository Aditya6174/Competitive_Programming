class Solution {
public:
    int solve(int idx , vector<int>& arr , vector<int>& dp){
        if(idx == 0)
            return arr[idx];
        if(idx < 0)
            return 0;
        if(dp[idx] != -1)
            return dp[idx];
        int left = arr[idx] + solve(idx-2,arr,dp);
        int right = 0 + solve(idx-1,arr,dp);
        return dp[idx] = max(left,right);
    }
    int rob(vector<int>& nums) {
        //vector<int> dp(nums.size(),-1);
        int n = nums.size();
        //int ans = solve(nums.size()-1 , nums , dp);
        int prev = nums[0];
        int prev2 = 0;
        for(int i=0;i<n;i++){
            int take = nums[i];
            if(i > 1)
                take += prev2;
            int notTake = 0 + prev;
            int curr = max(take , notTake);
            prev2 = prev;
            prev = curr;
        }
        return prev;
    }
}; 
